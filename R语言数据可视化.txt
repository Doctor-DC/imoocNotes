1、数据科学家需要具备的知识和技能
2、了解数据的特征
3、数据可视化：R的绘图
4、制作并发布报告

1：

计算机相关：
专业知识：
数学与统计


#数据科学家需要具备的知识和技能
#1、计算机技能
#2、数学和统计学知识
#3、业务能力
#职位分类：数据开发者，数据研究者，数据创造家，数据商业


#完整的数据分析流程
#1、定义研究问题，定义理想的数据集，确定能够获取什么数据，获取数据，清洗数据
#2、探索性分析（数据可视化），统计分析/建模（机器学习）
#3、解释/交流结果（数据可视化），挑战结果（有没有其他可能），书写报告（Reproducible原则）

{# 假设驱动&数据驱动 #}

学术界比较多假设驱动：先定义研究的问题，然后用数据来验证你研究的问题
而在工业界数据驱动比较多：数据驱动就是你刚开始不知道你要研究什么问题，通过一大堆数据分析的结果来得出一些结论，。而这些结论他们有可能是相互矛盾的，也有可能你什么都得不到，如果在相互矛盾的一大堆结论中你选择了一些结论的话，那么你就犯了一个错误，就是你有可能只选择了对你有利的那些结论而你忽视了那些对你不利的结论，所以你得出的结果就是不可靠的。
在现实在实际情况下，我们一般是假设驱动和数据驱动结合的情况比较多。

挑战结果的意思是：不论你最后得出的结论是多么符合你之前的预期，或者是你多么认为你的这个数据分析的过程是没有错的，但是这时候你还是要对你自己的结果保留一个怀疑的态度，要思考还有没有没有考虑到的问题或者是有可能你还是会犯了一些错误。

2-1 R数据基础

#数据基础
#观测(每一行一个观测)(observation)
,变量(每一列为一个变量),数据矩阵(variable)
#变量类型:1.数值型变量(连续型,离散型)(data matrix)
#2.分类变量(无序,有序)
#变量之间的关系(对应不同类型的可视化方法和统计方法)
#碰到两个变量关系时,对变量类型做分析,再决定下一步
(quantitative)
1-数值变量就是可以进行加减乘除的，其中分为离散型变量跟连续变量 比如说一二三四五六七八九十 
2-分类变量又分为有序变量跟无序变量 其中无序变量比如说苹果桃子梨他们就不能进行比较 也不能进行哦加减乘除 然后有序变量就比如说大一大二大三 他们虽然不能进行加减乘除 但是我们就知道大二的比大一的多上了一年学 他们是其中是有一些逻辑关系的


遇到两个变量：
两个数值变量
两个分类变量
一个分类变量和一个数值变量


数值变量的特征与可视化：
（1）集中趋势(measures of center)：均值(mean)、中位数(median)、众数(mode)
（2）离散趋势(measures of spread)：值域(range:max-min)、
(variance)方差
standard variance（标准差）、
(interquartile range)四分位距
#稳健统计量:中位数,四分卫差
#非稳健统计量:均值,值域,标准差等
数值变量的可视化：
（1）单变量：柱状图（histogram）、点图(dot plot)、
正态/左偏/右偏/ 单峰，多峰
把柱子变成点
直方图、
箱图（box plot）：
中位数.分位点、极端值
最黑线对应：50%分位点，中位数。
左侧为25%分位点；右侧为75%分位点
75%与25%分位点的差值就是四分位距IQR(没有复数)

极端值界限
Q1-1.5IQR
Q3+1.5IQR
（2）两个变量的关系：
散点图(scatter plot )：方向：形状，强度，极端值
方向：正相关，负相关。
形状：直线，抛物线，椭圆。线性关系，非线性关系
强度：关系是否明确
极端值：远离数据整体趋势

分类变量的特征和可视化：

1-一个分类变量的可视化可以用频率表或者条形图来表示：


2-两个分类变量的关系可以用关联表和相对频率表来表示：
表：

图中那个方框就是关联表然后她是表示幸存与否跟年龄的人数

而相对频率表我们是按列来看的 比如说下面的那两行的数字一共有四个 表示在儿童里面幸存的占了百分之百 而没有幸存的占了百分之零 在成人里面幸存的占了62%没有幸存的占了38% 所以我们可以得出结论就是幸存与否与年龄是有关系的 而这个关系不一定是因果关系 而只能说他们两个是相互依存的


两个分类变量的关系我们可以用分段条形图和相对频率分段条形图来表示
图：
下面这两幅图代表的是同一个情况就是低中高收入人群对于存钱是否困难的一个调查 四个颜色分别表示非常困难 有点困难 不是很困难 一点都不困难 四个选项
他们俩的区别可以很明显的看出来这是y轴一个是绝对值一个是所占的本列的频率
通常来说我们比较关注右边这个图也就是相对频率分段条形图 因为他的y轴全部都是百分之百 里面可以很清晰的看出每一个选项了本列的百分之多少 我们比较关注的就是比率


两个分类变量的关系还可以用马赛克图来表示

同样他的比率是百分之百 然后我们可以看到ｙ轴就是它所占的百分比 而x轴我们发现它的宽度是不一样的 应该是表示的中高收入占所有收入的百分之多少 
它可以反映两种的百分比


一个分类变量和一个数值变量的关系我们可以用并排箱图来表示
这里的x轴代表的是每个的月份y轴代表的是温度
从这个图中我们看可以看出每一个月份的均值和极端值 并且可以很容易的看出七月份的温度是最高的 总体是呈现一个先升高后降低的状态

数值变量：
	均值/中位数/众数/方差/四分位距
	一个数值变量:柱状图/点图/箱图
	两个数值变量：散点图

分类变量：
	一个分类变量：频率表/条形图、
	两个分类变量: 关联表/相对频率表/分段条形图/相对频率分段条形图/马赛克图
	一个分类变量、一个数值变量：并排箱图

R的三大绘图系统:
	#R三大绘图系统
	#1.基本绘图系统
	#1)艺术家的调色板:绘图始于空白帆布
	#需要事先计划;直观地实时反映绘图个分析数据的逻辑
	#2)两步=图+修饰/添加=执行一系列函数
	#3)适于绘制2D图形

	#2.Lattice绘图系统
	#1)特别适用于变量之间的交互:在变量Z不同水平,变量Y如何随着变量X变化
	男性、女性中年龄和身高的关系
	#2)绘图=使用一次函数调用(一次成图)

	#3.ggplot2
	#1)The Grammar of Graphics
	# 图:动词,名词,形容词等.
	# 数据映射到几何客体(points/lines/bars)的美学属性(颜色/形状/大小)
	#2)基本绘图系统+Lattice绘图系统
	#  自动处理标题/文字说明/空间等,但也允许通过添加注释进行修改.
	

#基本绘图系统

#绘图函数 -> graphics包
#hist/ boxplot/ points/lines/text/title/axis
#柱状图/箱图/点/线/文字/命名/坐标轴
#调用函数会启用一个图形设备(如果没有正在运行的图形设备)并在设备上绘图
	基本绘图系统+屏幕设备
#plot()
plot(x,y,...)
#xlab/ylab/lwd/lty/pch/col   x标签/y标签/线宽/线型/点型/颜色
?par
par()
#用于设置全局参数(作用于R中所有plot画图) :
 bg/mar/las/mfrow/mfcol   背景颜色/边距/横竖排版/分成行列按行/列填充
 这些参数可在新的plot前修改

#Lattice绘图系统
#xyplot(散点图)/bwplot/histgram(柱状图)/stripplot/dotplot(点图)/splom/levelplot/contourplot
#格式:xyplot(y ~ x|f * g, data)
y因变量，x自变量 f*g分类变量
#panel,用来控制每个面板内的绘图
grid包
实现了独立于base的绘图系统： lattice包是基于grid创建的。很少直接从grid包调用函数

#lattice和Base的重要区别

#Base绘图函数直接在图形设备上绘图
#Lattice绘图函数返回trellis类对象，包含绘图相应信息
# 打印函数真正执行了在设备上绘图
# 命令执行时, trellis类对象会被自动打印.看起来就是直接完成

#ggplot2绘图系统
#层(layer) 形容词+动词+名词构成句子
data 感兴趣的变量(data frame)
2-(Aesthetics)美学属性：x-axis x轴/y-axis y轴/ color 颜色/ fill 填充的颜色/ size 大小 /labels标签/ alpha 透明度/ shape 形状/linear width 线宽/linear type 线的类型

3-(Geometries)几何客体：最基本的层
point 点/ line 线/ histogram 柱状图/ bar 条形图/ boxplot 箱图

4-面层(facets)
columns/rows

5-统计层

6-坐标系：

7-主题


#绘图函数:qplot()
类似于base系统的plot()
隐藏了绘图实现的细节
#ggplot():
ggplot2核心,
调用本身不能绘图：依靠基础之上添加层来绘图.


qplot()

ggplot2()

grDevice
colorRamp() & colorRampPalette()
颜色名字使用colors()获取

#RColorBrewer包，
三类调色板：
sequential，diverging，qualitative
调色板可与前两个联合使用

sequential
过渡性：顺序数据

diverging：
凸显极端值

qualitative：
分类变量

R支持的图像设备：
屏幕设备
文件设备
	向量格式 pdf
	位图 png/jepg/bmp

grDevices包
	包含了实现各种图形设备的代码
	？Devices
生成图形的两种途径：
	1：调用绘图函数，默认使用屏幕-->屏幕设备显示图形-->进一步修饰图形
	2：明确指定图形设备->调用绘图函数(如果指定的是文件设备则无法在屏幕看到图形)
	--》进一步修饰图形--》关闭图形设备
	dev.off()

	可同时打开多个设备，但一次只能在一个设备上绘图

	dev.cur() / dev.set()

	拷贝图形：
	dev.copy dev.copy2pdf

	绘图前思考
	屏幕，文件
	向量格式位图
	使用哪个绘图系统

探索性数据分析：
	目的：
		了解数据特征，找到数据中的模式.形成分析策略
		图与数字相互验证，帮助发现错误，用于交流结果
	特点:
		快速、通常呈现在屏幕设备
		不需要过分注意图是否漂亮
		
	六大作图原则：
		1：凸显比较（谁和谁比）
		箱图，某月份温度。没有比较基线
		各个月份放在一起比

		2：凸显机制（因果，机制，解释）
		低中高水平存钱是否容易


		3： 凸显多元性（2个变量，远离扁平）

		臭氧含量和温度--》引入月份

		4：整合证据：
		整合文字，数字，图，表
		用多种方式显示数据的特征
		不要让工具主宰分析

		5：使用适当的图标，尺度等
		完备性，一图胜前言

		6：内容是王道：
		研究问题的重要性> 作图漂亮

		如何问问题：
		操作系统版本。版本。哪一步产生错误，预期是什么，得到结果是什么

		可重复研究与可再生(再现)研究

		可重复：
			独立的研究者，数据，分析方法，工具得到一致的证据

		小保方晴子
		具身认知(embodied cognition)

		缺点：没钱，没时间。没机会。独特性

		可再生(再现)研究：
		让数据和分析过程(code)透明
		使用你的数据和分析方法得到结果

		(Reproducible Research)(可再现研究)的工具

		人可以读懂的语言(文字)目的/方法等
		机器可以读懂的语言：code*(加载数据/计算结果/生成图和表)

		R Markdown :R code +Markdown
		R Markdown -> Markdown ->HTML

		Markdown语法
		斜体 *two stars*
		粗体 **four star**
		标题：
		##This is a secondary heading
		### This is a tertiary heading
		无序列表：
		-first item
		-seond item

		有序列表：
		1.first item
		2.second item

		链接[imooc](http://www.imooc.com)
		新行/换行:在上一行结尾加两个空格

R makedown
echo = FALSE
将代码隐藏掉


cache=TRUE


注意事项：
Do
研究一个有意思/有意义的问题
教会电脑做事/能自动化就自动化
使用版本控制
注明软件环境
设置seed
保持全局性 知道处于整个分析中哪一个阶段

Do Not
手工操作 url
只使用gui
只保存输出结果

信息层级化
科研论文/报告

标题/作者单位/摘要
前言/方法/结果/讨论
补充材料













































